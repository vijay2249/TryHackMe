export IP=<IP>

===
when files are uploaded to the server, a range of checks should be carreid out to ensure that the files will not overwrite anything which already exists on server. 


===

When checking for file upload vulnerability - 

--> Overwriting Existing Files
first step check if there is any option to overwrite the file...
Upload the file with the same file name and extension and check the results

--> Remote Code Execution
There are two basic ways to achieve RCE on a webserver when exploiting a file upload vulnerability: webshells, and reverse/bind shells.


--> Filtering
->Extensions validation:
Filters that check for extensions work in one of two ways. They either blacklist extensions (i.e. have a list of extensions which are not allowed) or they whitelist extensions (i.e. have a list of extensions which are allowed, and reject everything else).

-> File Type Filtering
MIME Validation: (Multipurpose Internet Mail Extension) types are used as an identifier for files - originally when transferred as attachements over mail, but now also when files are being transferred over HTTPS.
The MIME type for a file upload is attached in the header of the request, with name as "Content-Type"

Magic Number Validation: Magic numbers are the most accurate way of determining the contents of a file; although they are by no means impossible to fake. The magic number of a file is a string of bytes at the very beginning of a file content which identify the content.

Unlike Windows, Unix systems use magic numbers for identifying files; however, when dealing with file uploads, it is possible to check the magic number of the uploaded file to ensure that it is safe to accept. This is by no means a guaranteed solution, but it's more effective than checking the extension of a file.


-> File length filtering
File length filters are used to prevent huge files from being uploaded to the server via an upload form


-> File Name Filtering
Validate file names so that the files names wont cause any issue while saving the file in system


-> File Content Filtering
More complicated filtering systems may scan the full contents of an uploaded file to ensure that it's not spoofing its extension, MIME type and Magic Number. This is a significantly more complex process than the majority of basic filtration systems employ



---> Bypassing Client-Side Filtering
This is very extremely easy to bypass, as it occurs entirely on a machine you control.

4 options to bypass this filter:
1. Turn off Javascript in browser
2. Intercept and modify the incoming page
3. Intercept and modify the file upload
4. Send the file directly to the upload point




======== Bypassing Server side Filtering: file extensions
Try file upload with multiple file extensions  - this is basically trail and error


======== Bypassing Server side Filtering: Magic Numbers

